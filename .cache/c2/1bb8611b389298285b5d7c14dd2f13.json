{"id":"index.js","dependencies":[{"name":"C:\\Users\\HP\\Desktop\\progect\\lessons GoIt\\JavaScript\\goit-js-hw-11-promisification\\package.json","includedInParent":true,"mtime":1604320244304}],"generated":{"js":"/* Напиши функцию delay(ms), которая возвращает промис,\r\nпереходящий в состояние \"resolved\" через ms миллисекунд.\r\nЗначением исполнившегося промиса должно быть то кол - во\r\nмиллисекунд которое передали во время вызова функции delay.*/\nvar delay = function delay(ms) {\n  return Promise.resolve(\"\".concat(ms));\n};\n/*function logger(result) {\r\n    console.log(result);\r\n}*/\n\n\nvar logger = function logger(time) {\n  return console.log(\"Resolved after \".concat(time, \"ms\"));\n}; // Вызовы функции для проверки\n\n\ndelay(2000).then(logger); // Resolved after 2000ms\n\ndelay(1000).then(logger); // Resolved after 1000ms\n\ndelay(1500).then(logger); // Resolved after 1500ms"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"name":"delay","generated":{"line":5,"column":4},"source":"index.js","original":{"line":6,"column":6}},{"generated":{"line":5,"column":9},"source":"index.js","original":{"line":6,"column":11}},{"generated":{"line":5,"column":12},"source":"index.js","original":{"line":6,"column":14}},{"name":"delay","generated":{"line":5,"column":21},"source":"index.js","original":{"line":6,"column":6}},{"generated":{"line":5,"column":26},"source":"index.js","original":{"line":6,"column":14}},{"name":"ms","generated":{"line":5,"column":27},"source":"index.js","original":{"line":6,"column":14}},{"generated":{"line":5,"column":29},"source":"index.js","original":{"line":6,"column":16}},{"generated":{"line":5,"column":31},"source":"index.js","original":{"line":6,"column":20}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":7,"column":2}},{"name":"Promise","generated":{"line":6,"column":9},"source":"index.js","original":{"line":7,"column":9}},{"generated":{"line":6,"column":16},"source":"index.js","original":{"line":7,"column":16}},{"name":"resolve","generated":{"line":6,"column":17},"source":"index.js","original":{"line":7,"column":17}},{"generated":{"line":6,"column":24},"source":"index.js","original":{"line":7,"column":9}},{"name":"ms","generated":{"line":6,"column":35},"source":"index.js","original":{"line":7,"column":28}},{"generated":{"line":6,"column":37},"source":"index.js","original":{"line":7,"column":9}},{"generated":{"line":6,"column":39},"source":"index.js","original":{"line":7,"column":2}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":8,"column":1}},{"generated":{"line":7,"column":1},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":16,"column":0}},{"name":"logger","generated":{"line":13,"column":4},"source":"index.js","original":{"line":16,"column":6}},{"generated":{"line":13,"column":10},"source":"index.js","original":{"line":16,"column":12}},{"generated":{"line":13,"column":13},"source":"index.js","original":{"line":16,"column":15}},{"name":"logger","generated":{"line":13,"column":22},"source":"index.js","original":{"line":16,"column":6}},{"generated":{"line":13,"column":28},"source":"index.js","original":{"line":16,"column":15}},{"name":"time","generated":{"line":13,"column":29},"source":"index.js","original":{"line":16,"column":15}},{"generated":{"line":13,"column":33},"source":"index.js","original":{"line":16,"column":19}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":16,"column":19}},{"name":"console","generated":{"line":14,"column":9},"source":"index.js","original":{"line":16,"column":23}},{"generated":{"line":14,"column":16},"source":"index.js","original":{"line":16,"column":30}},{"name":"log","generated":{"line":14,"column":17},"source":"index.js","original":{"line":16,"column":31}},{"generated":{"line":14,"column":20},"source":"index.js","original":{"line":16,"column":23}},{"name":"time","generated":{"line":14,"column":46},"source":"index.js","original":{"line":16,"column":53}},{"generated":{"line":14,"column":50},"source":"index.js","original":{"line":16,"column":23}},{"generated":{"line":14,"column":58},"source":"index.js","original":{"line":16,"column":19}},{"generated":{"line":15,"column":0},"source":"index.js","original":{"line":16,"column":19}},{"generated":{"line":15,"column":1},"source":"index.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":3},"source":"index.js","original":{"line":18,"column":0}},{"name":"delay","generated":{"line":18,"column":0},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":18,"column":5},"source":"index.js","original":{"line":19,"column":5}},{"generated":{"line":18,"column":6},"source":"index.js","original":{"line":19,"column":6}},{"generated":{"line":18,"column":10},"source":"index.js","original":{"line":19,"column":5}},{"generated":{"line":18,"column":11},"source":"index.js","original":{"line":19,"column":0}},{"name":"then","generated":{"line":18,"column":12},"source":"index.js","original":{"line":19,"column":12}},{"generated":{"line":18,"column":16},"source":"index.js","original":{"line":19,"column":0}},{"name":"logger","generated":{"line":18,"column":17},"source":"index.js","original":{"line":19,"column":17}},{"generated":{"line":18,"column":23},"source":"index.js","original":{"line":19,"column":0}},{"generated":{"line":18,"column":26},"source":"index.js","original":{"line":19,"column":26}},{"name":"delay","generated":{"line":20,"column":0},"source":"index.js","original":{"line":20,"column":0}},{"generated":{"line":20,"column":5},"source":"index.js","original":{"line":20,"column":5}},{"generated":{"line":20,"column":6},"source":"index.js","original":{"line":20,"column":6}},{"generated":{"line":20,"column":10},"source":"index.js","original":{"line":20,"column":5}},{"generated":{"line":20,"column":11},"source":"index.js","original":{"line":20,"column":0}},{"name":"then","generated":{"line":20,"column":12},"source":"index.js","original":{"line":20,"column":12}},{"generated":{"line":20,"column":16},"source":"index.js","original":{"line":20,"column":0}},{"name":"logger","generated":{"line":20,"column":17},"source":"index.js","original":{"line":20,"column":17}},{"generated":{"line":20,"column":23},"source":"index.js","original":{"line":20,"column":0}},{"generated":{"line":20,"column":26},"source":"index.js","original":{"line":20,"column":26}},{"name":"delay","generated":{"line":22,"column":0},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":5},"source":"index.js","original":{"line":21,"column":5}},{"generated":{"line":22,"column":6},"source":"index.js","original":{"line":21,"column":6}},{"generated":{"line":22,"column":10},"source":"index.js","original":{"line":21,"column":5}},{"generated":{"line":22,"column":11},"source":"index.js","original":{"line":21,"column":0}},{"name":"then","generated":{"line":22,"column":12},"source":"index.js","original":{"line":21,"column":12}},{"generated":{"line":22,"column":16},"source":"index.js","original":{"line":21,"column":0}},{"name":"logger","generated":{"line":22,"column":17},"source":"index.js","original":{"line":21,"column":17}},{"generated":{"line":22,"column":23},"source":"index.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":26},"source":"index.js","original":{"line":21,"column":26}}],"sources":{"index.js":"/* Напиши функцию delay(ms), которая возвращает промис,\r\nпереходящий в состояние \"resolved\" через ms миллисекунд.\r\nЗначением исполнившегося промиса должно быть то кол - во\r\nмиллисекунд которое передали во время вызова функции delay.*/\r\n\r\nconst delay = ms => {\r\n  return Promise.resolve(`${ms}`);\r\n};\r\n\r\n\r\n\r\n/*function logger(result) {\r\n    console.log(result);\r\n}*/\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"},"lineCount":null}},"error":null,"hash":"0e28848fecfbae3863af1a46639a321a","cacheData":{"env":{}}}